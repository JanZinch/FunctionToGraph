<Window x:Class="FunctionToGraph.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:scottPlot="clr-namespace:ScottPlot;assembly=ScottPlot.WPF"
        xmlns:colorpicker="clr-namespace:ColorPicker;assembly=ColorPicker"
        xmlns:local="clr-namespace:FunctionToGraph"
        xmlns:models="clr-namespace:FunctionToGraph.Models"
        mc:Ignorable="d"
        Title="Function to graph" Height="550" Width="1000">
    
    <Window.Resources>
        <models:Function x:Key="Function" ExpressionString="Pow(x, 2)-10" />
        
        <ControlTemplate TargetType="Button" x:Key="ColorPickerTemplate">
            <Border x:Name="Border" 
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" 
                    Background="{TemplateBinding Background}">
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        
        <Style x:Key="ColorPicker" TargetType="Button">
            <Style.Setters>
                <Setter Property="DataContext" Value="{DynamicResource GraphColor}"/>
                <Setter Property="Background" Value="{Binding Converter={StaticResource ColorToBrushConverter}}"/>
                <Setter Property="Template" Value="{StaticResource ColorPickerTemplate}"/>
            </Style.Setters>
        </Style>
        
        
    </Window.Resources>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.25*" MinWidth="100"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*" MinWidth="600"/>
        </Grid.ColumnDefinitions>
        <StackPanel 
            Grid.Column="0" 
            Background="Bisque"
        >
            <StackPanel 
                Orientation="Horizontal"
                Margin="10">
                <TextBlock 
                    Text="y(x)="
                />
                <TextBox
                    x:FieldModifier="private"
                    x:Name="_functionTextBox"
                    Width="150"
                    MaxLines="1"
                    MaxLength="30"
                    
                    DataContext="{StaticResource Function}"
                    
                    Text = "{Binding ExpressionString, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                    
                    >
                    <!--<TextBox.Text>
                        <Binding Path="ExpressionString" NotifyOnValidationError="True">
                            <Binding.ValidationRules>
                                <DataErrorValidationRule />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>-->
                    
                </TextBox>
                
            </StackPanel>
                
            <TextBlock 
                Text="{StaticResource Tutorial}"
                Margin="10"
                TextWrapping="Wrap"
                TextAlignment="Justify"
            />
            
            <StackPanel 
                Orientation="Horizontal"
                Margin="10">
                <TextBlock 
                    Text="Graph color:"
                />
                <Button
                    Width="100"
                    Margin="10 0 0 0"
                    Style="{StaticResource ColorPicker}"
                    Click="OnGraphColorButtonClick"
                >
                    
                    <!--DataContext="{DynamicResource GraphColor}"
                    Background="{Binding Converter={StaticResource ColorToBrushConverter} }"-->
                    
                </Button>
                
            </StackPanel>
            
            
            
            <!--<Button Content="Button" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="50" Height="50" HorizontalContentAlignment="Left" BorderBrush="{x:Null}" Foreground="{x:Null}" Margin="50,0,0,0">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="Green"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="DarkGoldenrod"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            
            <Button Content="Click" Width="200" Height="50">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="LightBlue" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border x:Name="Border" Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="LightGreen" TargetName="Border" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>
            </Button>-->
            
            
        </StackPanel>
        <GridSplitter
            Grid.Column="1"
            Width="3"
            HorizontalAlignment="Center"
            VerticalAlignment="Stretch"
            ></GridSplitter>
        <scottPlot:WpfPlot
            Grid.Column="2"
            x:Name="_plot" 
            
            />
    </Grid>
</Window>
